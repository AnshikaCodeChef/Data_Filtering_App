[{"C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\index.js":"1","C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\Components\\HomePage\\HomePage.js":"3","C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\Components\\HomePage\\Dropdown\\Dropdown.js":"4"},{"size":538,"mtime":1614677441010,"results":"5","hashOfConfig":"6"},{"size":375,"mtime":1614677441013,"results":"7","hashOfConfig":"6"},{"size":4972,"mtime":1614712225751,"results":"8","hashOfConfig":"6"},{"size":1095,"mtime":1614687879294,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"h4hn3x",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\index.js",[],["22","23"],"C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\Components\\HomePage\\HomePage.js",["24","25","26"],"import \"./HomePage.css\";\r\nimport React,{useState,useEffect} from \"react\"\r\nimport Dropdown from \"./Dropdown/Dropdown\"\r\nimport { Button } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport axios from \"axios\";\r\nfunction HomePage() {\r\n\tconst gender =[\"male\",\"female\"]\r\n\tconst nationality = [\"Australia(AU)\",\"Brazil(BR)\",\"Canada(CA)\",\"France(FR)\",\"Great Britain(GB)\",\"USA(US)\"]\r\n\tconst natCode = {\"Australia(AU)\":\"AU\",\"Brazil(BR)\":\"BR\",\"Canada(CA)\":\"CA\",\"France(FR)\":\"FR\",\"Great Britain(GB)\":\"GB\",\"USA(US)\":\"US\"}\r\n\tconst numberOfResults = [10,20,50,100]\r\n\tconst[gen,setGen] = useState(null)\r\n\tconst[nat,setNat] = useState(null)\r\n\tconst[res,setRes] = useState(null)\r\n\tconst[page,setPage] = useState(1);\r\n\tconst [data, setData] = useState(\"\");\r\n\tconst [OriginalData, setOriginalData] = useState([]);\r\n\r\n\r\n\tconst fetchdata = () => {\r\n\t\tconsole.log(gen, res, nat);\r\n\t\tif (gen !== \"\" && nat !== \"\") {\r\n\t\t  return axios\r\n\t\t\t.get(\r\n\t\t\t  `https://randomuser.me/api/?page=${page}&gender=${gen}&results=${res}&nat=${natCode[nat]}`\r\n\t\t\t)\r\n\t\t\t.then(({ data }) => {\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t  return data;\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t  console.error(err);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn axios\r\n\t\t  .get(`https://randomuser.me/api/?page=${page}&results=${res}`)\r\n\t\t  .then(({ data }) => {\r\n\t\t\t  console.log(data)\r\n\t\t\treturn data;\r\n\t\t  })\r\n\t\t  .catch((err) => {\r\n\t\t\tconsole.error(err);\r\n\t\t  });\r\n\t  };\r\n\r\n\t  const callapi = () => {\r\n\t\tfetchdata().then((newData) => {\r\n\t\t  setData(JSON.stringify(newData) || \"No data\");\r\n\t\t  const inter = newData.results;\r\n\t\t  console.log(inter)\r\n\t\t  setOriginalData(inter);\r\n\t\t});\r\n\t  };\r\n\r\n\t\tconst useStyles = makeStyles({\r\n\t\t\ttable: {\r\n\t\t\t  minWidth: 650,\r\n\t\t\t},\r\n\t\t  });\r\n\r\n\t\t  const handlePrevPageNumber = () => {\r\n\t\t\t  console.log(page)\r\n\t\t\tif (page !== 1) {\r\n\t\t\t  setPage(page-1);\r\n\t\t\t  callapi();\r\n\t\t\t}\r\n\t\t  };\r\n\r\n\t\t  const handleNextPageNumber = () => {\r\n\t\t\t  console.log(page)\r\n\t\t\tsetPage(page + 1);\r\n\t\t\tcallapi();\r\n\t\t  };\r\n\t\t  \r\n\t\t//   function createData(thumbnail,name, gender, nationality, email, phone) {\r\n\t\t// \treturn { thumbnail,name, gender, nationality, email, phone };\r\n\t\t//   }\r\n\t\t  \r\n\t\t//   const rows = [\r\n\t\t// \tcreateData('Frozen yoghurt', 159, 6.0, 24, 4.0,98),\r\n\t\t// \tcreateData('Ice cream sandwich', 237, 9.0, 37, 4.3,90),\r\n\t\t// \tcreateData('Eclair', 262, 16.0, 24, 6.0,67),\r\n\t\t// \tcreateData('Cupcake', 305, 3.7, 67, 4.3,87),\r\n\t\t// \tcreateData('Gingerbread', 356, 16.0, 49, 3.9,98),\r\n\t\t//   ];\r\n\r\n\tconst classes = useStyles();\r\n\r\n\t\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<div className=\"app__body\">\r\n\t\t\t<div className=\"app__dropdown\" style={{width:210}}>\r\n\t\t\t<Dropdown options={gender} prompt=\"Select gender...\" value ={gen} onChange={(val1)=>setGen(val1)}/>\r\n\t\t\t<Dropdown options={nationality} prompt=\"Select country...\" value ={nat} onChange={(val2)=>setNat(val2)}/>\r\n\t\t\t<Dropdown options={numberOfResults} prompt=\"Number of results...\" value ={res} onChange={(val3)=>setRes(val3)}/>\r\n\t\t\t<Button className=\"load__button\" onClick={callapi}>Click To Filter</Button>\r\n\t\t\t<button onClick={() => { handleNextPageNumber()}}>NEXT Page</button>\r\n\t\t\t<button onClick={() => { handlePrevPageNumber()}}>PREVIOUS Page</button>\r\n\t\t\tpage:{page}\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div className=\"table\">\r\n\t\t\t<TableContainer component={Paper}>\r\n\t\t\t\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Thumbnail</TableCell>\r\n\r\n            <TableCell align=\"right\">Name&nbsp;</TableCell>\r\n            <TableCell align=\"right\">Gender&nbsp;</TableCell>\r\n            <TableCell align=\"right\">Nationality&nbsp;</TableCell>\r\n            <TableCell align=\"right\">Email&nbsp;</TableCell>\r\n            <TableCell align=\"right\">Phone&nbsp;</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {OriginalData.map((row) => (\r\n            <TableRow key={row.idx}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <img  src={row.picture.thumbnail}/>\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.name.title +\" \" + row.name.first +\" \" +row.name.last}</TableCell>\r\n              <TableCell align=\"right\">{row.gender}</TableCell>\r\n              <TableCell align=\"right\">{row.location.country}</TableCell>\r\n              <TableCell align=\"right\">{row.email}</TableCell>\r\n              <TableCell align=\"right\">{row.phone}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default HomePage;\r\n","C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\Components\\HomePage\\Dropdown\\Dropdown.js",["27"],"import React,{useState,useRef,useEffect} from 'react'\r\nimport \"./Dropdown.css\"\r\nfunction Dropdown({options,prompt,value,onChange}) {\r\n    \r\n    const[open,setOpen] = useState(false)\r\n    const ref = useRef(null)\r\n\r\n    useEffect(()=>{\r\n        document.addEventListener(\"click\",close)\r\n        return () => document.removeEventListener(\"click\",close)\r\n    })\r\n\r\n    function close(e) {\r\n        setOpen(e && e.target == ref.current)\r\n    }\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <div className=\"control\" onClick = {() => setOpen((prev)=>!prev)}>\r\n                <div className=\"selected-value\" ref={ref}>{value ? value : prompt}</div>\r\n                <div className={`arrow ${open ? \"open\" : null}`} />\r\n            </div>\r\n            <div className={`options ${open ? \"open\" : null}`}>\r\n                {options.map((option,index)=> <div className={`option ${value===option ? \"selected\" : null}`} key={index} onClick={()=>{onChange(option); setOpen(false);}}>{option}</div>)\r\n}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown;\r\n",["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":2,"column":24,"nodeType":"36","messageId":"37","endLine":2,"endColumn":33},{"ruleId":"34","severity":1,"message":"38","line":23,"column":9,"nodeType":"36","messageId":"37","endLine":23,"endColumn":13},{"ruleId":"39","severity":1,"message":"40","line":129,"column":17,"nodeType":"41","endLine":129,"endColumn":52},{"ruleId":"42","severity":1,"message":"43","line":14,"column":31,"nodeType":"44","messageId":"45","endLine":14,"endColumn":33},{"ruleId":"30","replacedBy":"46"},{"ruleId":"32","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["48"],["49"],"no-global-assign","no-unsafe-negation"]