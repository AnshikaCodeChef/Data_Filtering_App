[{"C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\index.js":"1","C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\Components\\HomePage\\HomePage.js":"3","C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\Components\\HomePage\\Sidebar\\Sidebar.js":"4","C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\Components\\HomePage\\Dropdown\\Dropdown.js":"5"},{"size":538,"mtime":1614677441010,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1614677441013,"results":"8","hashOfConfig":"7"},{"size":5502,"mtime":1614710156063,"results":"9","hashOfConfig":"7"},{"size":195,"mtime":1614688957665,"results":"10","hashOfConfig":"7"},{"size":1095,"mtime":1614687879294,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h4hn3x",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},"C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\index.js",[],"C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\Components\\HomePage\\HomePage.js",["24","25"],"C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\Components\\HomePage\\Sidebar\\Sidebar.js",[],["26","27"],"C:\\Users\\Anshika Singh\\Desktop\\data_filtering_App\\apprenticeship-base-repo\\client\\src\\Components\\HomePage\\Dropdown\\Dropdown.js",["28"],"import React,{useState,useRef,useEffect} from 'react'\r\nimport \"./Dropdown.css\"\r\nfunction Dropdown({options,prompt,value,onChange}) {\r\n    \r\n    const[open,setOpen] = useState(false)\r\n    const ref = useRef(null)\r\n\r\n    useEffect(()=>{\r\n        document.addEventListener(\"click\",close)\r\n        return () => document.removeEventListener(\"click\",close)\r\n    })\r\n\r\n    function close(e) {\r\n        setOpen(e && e.target == ref.current)\r\n    }\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <div className=\"control\" onClick = {() => setOpen((prev)=>!prev)}>\r\n                <div className=\"selected-value\" ref={ref}>{value ? value : prompt}</div>\r\n                <div className={`arrow ${open ? \"open\" : null}`} />\r\n            </div>\r\n            <div className={`options ${open ? \"open\" : null}`}>\r\n                {options.map((option,index)=> <div className={`option ${value===option ? \"selected\" : null}`} key={index} onClick={()=>{onChange(option); setOpen(false);}}>{option}</div>)\r\n}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown;\r\n",{"ruleId":"29","severity":1,"message":"30","line":23,"column":9,"nodeType":"31","messageId":"32","endLine":23,"endColumn":13},{"ruleId":"33","severity":1,"message":"34","line":144,"column":17,"nodeType":"35","endLine":144,"endColumn":52},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":14,"column":31,"nodeType":"42","messageId":"43","endLine":14,"endColumn":33},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["44"],"no-negated-in-lhs",["45"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]